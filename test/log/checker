{"timestamp":"2024-11-24T19:08:38.246557Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb0","rcx":"{}","env":"{_1: bool[true]}"},"target":"flux_refineck::checker","span":{"def_id":"assert","name":"shape"},"spans":[{"def_id":"assert","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.246888Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:8:20: 8:22 (#0)","rcx":"{}","env":"{_1: bool[true]}"},"target":"flux_refineck::checker","span":{"def_id":"assert","name":"shape"},"spans":[{"def_id":"assert","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.247012Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:8:20: 8:22 (#0)","rcx":"{}","env":"{_0: (), _1: bool[true]}"},"target":"flux_refineck::checker","span":{"def_id":"assert","name":"shape"},"spans":[{"def_id":"assert","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.247083Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"return","rcx":"{}","env":"{_0: (), _1: bool[true]}"},"target":"flux_refineck::checker","span":{"def_id":"assert","name":"shape"},"spans":[{"def_id":"assert","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.247195Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"return","rcx":"{}","env":"{_0: (), _1: bool[true]}"},"target":"flux_refineck::checker","span":{"def_id":"assert","name":"shape"},"spans":[{"def_id":"assert","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.247361Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb0","rcx":"{}","env":"{_1: bool[true]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"assert","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"assert","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.247411Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:8:20: 8:22 (#0)","rcx":"{}","env":"{_1: bool[true]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"assert","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"assert","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.247488Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:8:20: 8:22 (#0)","rcx":"{}","env":"{_0: (), _1: bool[true]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"assert","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"assert","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.247540Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"return","rcx":"{}","env":"{_0: (), _1: bool[true]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"assert","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"assert","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.247603Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"return","rcx":"{}","env":"{_0: (), _1: bool[true]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"assert","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"assert","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.248099Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb0","rcx":"{}","env":"{}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248141Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:11:9: 11:10 (#0)","rcx":"{}","env":"{}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248183Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:11:9: 11:10 (#0)","rcx":"{}","env":"{}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248224Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_1 = 10i32","stmt_span":"tests/test_vsflux00.rs:11:18: 11:20 (#0)","rcx":"{}","env":"{}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248289Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_1 = 10i32","stmt_span":"tests/test_vsflux00.rs:11:18: 11:20 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248334Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _1)","stmt_span":"tests/test_vsflux00.rs:11:9: 11:10 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248395Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _1)","stmt_span":"tests/test_vsflux00.rs:11:9: 11:10 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248439Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"AscribeUserType(_1, o)","stmt_span":"tests/test_vsflux00.rs:11:12: 11:15 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248485Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"AscribeUserType(_1, o)","stmt_span":"tests/test_vsflux00.rs:11:12: 11:15 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248528Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:9: 12:18 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248570Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:9: 12:18 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248611Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248652Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248695Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248746Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10], _3: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.248790Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_2 = ops::range::Range::Range<i32>(0i32, move _3)","stmt_span":"tests/test_vsflux00.rs:12:21: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10], _3: i32[10]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249192Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_2 = ops::range::Range::Range<i32>(0i32, move _3)","stmt_span":"tests/test_vsflux00.rs:12:21: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249263Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249318Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249373Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _2)","stmt_span":"tests/test_vsflux00.rs:12:9: 12:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249428Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _2)","stmt_span":"tests/test_vsflux00.rs:12:9: 12:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249482Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:9: 13:10 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249535Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:9: 13:10 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249588Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:13: 13:25 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249640Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:13: 13:25 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249694Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:13: 13:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249746Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:13: 13:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249802Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_6 = &'?2 mut _2","stmt_span":"tests/test_vsflux00.rs:13:13: 13:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249888Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_6 = &'?2 mut _2","stmt_span":"tests/test_vsflux00.rs:13:13: 13:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }], _6: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.249947Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_5 = call call iter::range::{impl#6}::next<i32>(move _6) -> [return: bb1, unwind: Cleanup(bb10)]","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | * }>[Range { 0, 10 }], _6: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.251286Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_5 = call call iter::range::{impl#6}::next<i32>(move _6) -> [return: bb1, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.251405Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb1","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.251509Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.251613Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.251711Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:24: 13:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.251814Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:24: 13:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.251915Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_4 = call call option::{impl#0}::unwrap<i32>(move _5) -> [return: bb2, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.252335Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_4 = call call option::{impl#0}::unwrap<i32>(move _5) -> [return: bb2, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.252443Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb2","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.252530Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:33: 13:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.252618Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:33: 13:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.252707Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:13:9: 13:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.252797Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:13:9: 13:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.252896Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:5: 14:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.252983Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:5: 14:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.253072Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:12: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.253163Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:12: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.253252Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:12: 14:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.253340Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:12: 14:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.253428Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_9 = copy _4","stmt_span":"tests/test_vsflux00.rs:14:12: 14:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.253530Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_9 = copy _4","stmt_span":"tests/test_vsflux00.rs:14:12: 14:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _9: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.253623Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_8 = Eq(move _9, 0i32)","stmt_span":"tests/test_vsflux00.rs:14:12: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _9: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.253764Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_8 = Eq(move _9, 0i32)","stmt_span":"tests/test_vsflux00.rs:14:12: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _8: bool[a2 = 0]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.253863Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:17: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _8: bool[a2 = 0]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.253956Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:17: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _8: bool[a2 = 0]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.254054Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_7 = call call assert(move _8) -> [return: bb3, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _8: bool[a2 = 0]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.254267Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_7 = call call assert(move _8) -> [return: bb3, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.254365Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb3","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.254456Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:18: 14:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.254546Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:18: 14:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.254637Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:19: 14:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.254723Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:19: 14:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.254810Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:9: 15:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.254897Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:9: 15:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.254986Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:13: 15:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.255072Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:13: 15:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.255158Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:13: 15:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.255245Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:13: 15:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.255331Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_12 = &'?3 mut _2","stmt_span":"tests/test_vsflux00.rs:15:13: 15:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.255443Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_12 = &'?3 mut _2","stmt_span":"tests/test_vsflux00.rs:15:13: 15:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: (), _12: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.255534Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_11 = call call iter::range::{impl#6}::next<i32>(move _12) -> [return: bb4, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: (), _12: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.256340Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_11 = call call iter::range::{impl#6}::next<i32>(move _12) -> [return: bb4, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.256485Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb4","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.256625Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.256762Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.256895Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:24: 15:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.257031Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:24: 15:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.257164Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_10 = call call option::{impl#0}::unwrap<i32>(move _11) -> [return: bb5, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.257550Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_10 = call call option::{impl#0}::unwrap<i32>(move _11) -> [return: bb5, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.257681Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb5","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.257818Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:33: 15:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.257941Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:33: 15:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.258067Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _10)","stmt_span":"tests/test_vsflux00.rs:15:9: 15:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.258192Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _10)","stmt_span":"tests/test_vsflux00.rs:15:9: 15:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.258324Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:5: 16:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.258447Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:5: 16:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.258569Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:12: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.258688Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:12: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.258810Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:12: 16:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.258929Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:12: 16:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.259049Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_15 = copy _10","stmt_span":"tests/test_vsflux00.rs:16:12: 16:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.259180Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_15 = copy _10","stmt_span":"tests/test_vsflux00.rs:16:12: 16:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _15: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.259302Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_14 = Eq(move _15, 1i32)","stmt_span":"tests/test_vsflux00.rs:16:12: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _15: i32[a5]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.259444Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_14 = Eq(move _15, 1i32)","stmt_span":"tests/test_vsflux00.rs:16:12: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _14: bool[a5 = 1]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.259569Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:17: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _14: bool[a5 = 1]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.259696Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:17: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _14: bool[a5 = 1]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.259819Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_13 = call call assert(move _14) -> [return: bb6, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _14: bool[a5 = 1]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.260048Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_13 = call call assert(move _14) -> [return: bb6, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.260173Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb6","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.260292Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:18: 16:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.260412Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:18: 16:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.260531Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:19: 16:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.260651Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:19: 16:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.260776Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:9: 17:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.260897Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:9: 17:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.261016Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:13: 17:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.261139Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:13: 17:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.261261Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:13: 17:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.261383Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:13: 17:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.261503Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_18 = &'?4 mut _2","stmt_span":"tests/test_vsflux00.rs:17:13: 17:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.261648Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_18 = &'?4 mut _2","stmt_span":"tests/test_vsflux00.rs:17:13: 17:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _18: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.261777Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_17 = call call iter::range::{impl#6}::next<i32>(move _18) -> [return: bb7, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _18: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.262607Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_17 = call call iter::range::{impl#6}::next<i32>(move _18) -> [return: bb7, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.262793Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb7","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.262966Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.263150Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.263324Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:24: 17:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.263512Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:24: 17:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.263689Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_16 = call call option::{impl#0}::unwrap<i32>(move _17) -> [return: bb8, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.264109Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_16 = call call option::{impl#0}::unwrap<i32>(move _17) -> [return: bb8, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.264281Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb8","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.264444Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:33: 17:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.264609Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:33: 17:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.264772Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _16)","stmt_span":"tests/test_vsflux00.rs:17:9: 17:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.264941Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _16)","stmt_span":"tests/test_vsflux00.rs:17:9: 17:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.265108Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:5: 18:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.265273Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:5: 18:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.265437Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:12: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.265601Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:12: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.265765Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:12: 18:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.265931Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:12: 18:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.266096Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_21 = copy _16","stmt_span":"tests/test_vsflux00.rs:18:12: 18:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.266273Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_21 = copy _16","stmt_span":"tests/test_vsflux00.rs:18:12: 18:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _21: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.266441Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_20 = Eq(move _21, 2i32)","stmt_span":"tests/test_vsflux00.rs:18:12: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _21: i32[a8]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.266625Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_20 = Eq(move _21, 2i32)","stmt_span":"tests/test_vsflux00.rs:18:12: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _20: bool[a8 = 2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.266793Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:17: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _20: bool[a8 = 2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.266955Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:17: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _20: bool[a8 = 2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.267123Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_19 = call call assert(move _20) -> [return: bb9, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _20: bool[a8 = 2]}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.267392Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_19 = call call assert(move _20) -> [return: bb9, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.267559Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb9","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.267717Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:18: 18:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.267878Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:18: 18:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.268040Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:19: 18:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.268202Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:19: 18:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.268362Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:10:13: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.268553Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:10:13: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.268715Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.268879Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.269045Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.269207Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.269373Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.269532Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.269694Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.269852Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.270014Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.270175Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.270341Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"return","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.270521Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"return","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, *, a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, *, a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, *}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"def_id":"donald","name":"shape"},"spans":[{"def_id":"donald","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.270849Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb0","rcx":"{}","env":"{}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.270887Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:11:9: 11:10 (#0)","rcx":"{}","env":"{}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.270925Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:11:9: 11:10 (#0)","rcx":"{}","env":"{}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.270962Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_1 = 10i32","stmt_span":"tests/test_vsflux00.rs:11:18: 11:20 (#0)","rcx":"{}","env":"{}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271011Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_1 = 10i32","stmt_span":"tests/test_vsflux00.rs:11:18: 11:20 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271051Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _1)","stmt_span":"tests/test_vsflux00.rs:11:9: 11:10 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271092Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _1)","stmt_span":"tests/test_vsflux00.rs:11:9: 11:10 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271132Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"AscribeUserType(_1, o)","stmt_span":"tests/test_vsflux00.rs:11:12: 11:15 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271172Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"AscribeUserType(_1, o)","stmt_span":"tests/test_vsflux00.rs:11:12: 11:15 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271214Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:9: 12:18 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271252Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:9: 12:18 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271291Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271330Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271369Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271417Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10], _3: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271460Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_2 = ops::range::Range::Range<i32>(0i32, move _3)","stmt_span":"tests/test_vsflux00.rs:12:21: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10], _3: i32[10]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271784Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_2 = ops::range::Range::Range<i32>(0i32, move _3)","stmt_span":"tests/test_vsflux00.rs:12:21: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271847Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271901Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:12:24: 12:25 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.271956Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _2)","stmt_span":"tests/test_vsflux00.rs:12:9: 12:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.272013Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _2)","stmt_span":"tests/test_vsflux00.rs:12:9: 12:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.272068Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:9: 13:10 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.272121Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:9: 13:10 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.272174Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:13: 13:25 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.272228Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:13: 13:25 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.272282Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:13: 13:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.272334Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:13: 13:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.272388Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_6 = &'?2 mut _2","stmt_span":"tests/test_vsflux00.rs:13:13: 13:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.272469Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_6 = &'?2 mut _2","stmt_span":"tests/test_vsflux00.rs:13:13: 13:18 (#0)","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }], _6: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.272527Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_5 = call call iter::range::{impl#6}::next<i32>(move _6) -> [return: bb1, unwind: Cleanup(bb10)]","rcx":"{}","env":"{_1: i32[10], _2: Range<λb0. { i32[b0] | $k0(b0)[] }>[Range { 0, 10 }], _6: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.273234Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_5 = call call iter::range::{impl#6}::next<i32>(move _6) -> [return: bb1, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.273339Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb1","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.273433Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.273527Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.273619Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:24: 13:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.273713Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:24: 13:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.273821Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_4 = call call option::{impl#0}::unwrap<i32>(move _5) -> [return: bb2, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _5: Option<λb1. { i32[b1] | b1 = 0 }>[Option { true }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.274198Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_4 = call call option::{impl#0}::unwrap<i32>(move _5) -> [return: bb2, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.274309Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb2","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.274401Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:33: 13:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.274492Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:13:33: 13:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.274584Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:13:9: 13:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.274674Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:13:9: 13:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.274766Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:5: 14:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.274857Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:5: 14:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.274947Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:12: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.275040Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:12: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.275131Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:12: 14:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.275222Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:12: 14:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.275313Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_9 = copy _4","stmt_span":"tests/test_vsflux00.rs:14:12: 14:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.275418Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_9 = copy _4","stmt_span":"tests/test_vsflux00.rs:14:12: 14:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _9: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.275513Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_8 = Eq(move _9, 0i32)","stmt_span":"tests/test_vsflux00.rs:14:12: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _9: i32[a2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.275629Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_8 = Eq(move _9, 0i32)","stmt_span":"tests/test_vsflux00.rs:14:12: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _8: bool[a2 = 0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.275727Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:17: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _8: bool[a2 = 0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.275824Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:17: 14:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _8: bool[a2 = 0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.275920Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_7 = call call assert(move _8) -> [return: bb3, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _8: bool[a2 = 0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.276112Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_7 = call call assert(move _8) -> [return: bb3, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.276210Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb3","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.276300Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:18: 14:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.276393Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:18: 14:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.276485Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:19: 14:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.276578Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:14:19: 14:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.276670Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:9: 15:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.276765Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:9: 15:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.276858Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:13: 15:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.276950Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:13: 15:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.277043Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:13: 15:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.277134Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:13: 15:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.277225Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_12 = &'?3 mut _2","stmt_span":"tests/test_vsflux00.rs:15:13: 15:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.277342Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_12 = &'?3 mut _2","stmt_span":"tests/test_vsflux00.rs:15:13: 15:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: (), _12: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.277438Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_11 = call call iter::range::{impl#6}::next<i32>(move _12) -> [return: bb4, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[a2], _7: (), _12: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.278228Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_11 = call call iter::range::{impl#6}::next<i32>(move _12) -> [return: bb4, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.278376Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb4","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.278511Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.278648Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.278782Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:24: 15:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.278919Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:24: 15:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.279069Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_10 = call call option::{impl#0}::unwrap<i32>(move _11) -> [return: bb5, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _11: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.279562Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_10 = call call option::{impl#0}::unwrap<i32>(move _11) -> [return: bb5, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.279711Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb5","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.279848Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:33: 15:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.279986Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:15:33: 15:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.280123Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _10)","stmt_span":"tests/test_vsflux00.rs:15:9: 15:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.280262Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _10)","stmt_span":"tests/test_vsflux00.rs:15:9: 15:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.280401Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:5: 16:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.280538Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:5: 16:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.280672Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:12: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.280805Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:12: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.280939Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:12: 16:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.281072Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:12: 16:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.281206Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_15 = copy _10","stmt_span":"tests/test_vsflux00.rs:16:12: 16:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.281357Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_15 = copy _10","stmt_span":"tests/test_vsflux00.rs:16:12: 16:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _15: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.281498Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_14 = Eq(move _15, 1i32)","stmt_span":"tests/test_vsflux00.rs:16:12: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _15: i32[a5]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.281659Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_14 = Eq(move _15, 1i32)","stmt_span":"tests/test_vsflux00.rs:16:12: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _14: bool[a5 = 1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.281801Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:17: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _14: bool[a5 = 1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.281938Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:17: 16:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _14: bool[a5 = 1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.282077Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_13 = call call assert(move _14) -> [return: bb6, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _14: bool[a5 = 1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.282322Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_13 = call call assert(move _14) -> [return: bb6, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.282466Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb6","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.282599Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:18: 16:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.282735Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:18: 16:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.282869Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:19: 16:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.283005Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:16:19: 16:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.283142Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:9: 17:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.283276Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:9: 17:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.283414Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:13: 17:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.283550Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:13: 17:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.283684Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:13: 17:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.283819Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:13: 17:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.283954Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_18 = &'?4 mut _2","stmt_span":"tests/test_vsflux00.rs:17:13: 17:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.284117Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_18 = &'?4 mut _2","stmt_span":"tests/test_vsflux00.rs:17:13: 17:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _18: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.284258Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_17 = call call iter::range::{impl#6}::next<i32>(move _18) -> [return: bb7, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a3, a4 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _18: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.285084Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_17 = call call iter::range::{impl#6}::next<i32>(move _18) -> [return: bb7, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.285271Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb7","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.285446Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.285624Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_2)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.285800Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:24: 17:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.285978Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:24: 17:25 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.286155Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_16 = call call option::{impl#0}::unwrap<i32>(move _17) -> [return: bb8, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _17: Option<λb1. { i32[b1] | b1 = a3 }>[Option { a3 < a4 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.286682Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_16 = call call option::{impl#0}::unwrap<i32>(move _17) -> [return: bb8, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.286864Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb8","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.287038Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:33: 17:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.287213Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:17:33: 17:34 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.287392Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _16)","stmt_span":"tests/test_vsflux00.rs:17:9: 17:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.287569Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _16)","stmt_span":"tests/test_vsflux00.rs:17:9: 17:10 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.287744Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:5: 18:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.287918Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:5: 18:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.288094Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:12: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.288275Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:12: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.288453Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:12: 18:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.288628Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:12: 18:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.288803Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_21 = copy _16","stmt_span":"tests/test_vsflux00.rs:18:12: 18:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.288998Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_21 = copy _16","stmt_span":"tests/test_vsflux00.rs:18:12: 18:13 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _21: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.289176Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_20 = Eq(move _21, 2i32)","stmt_span":"tests/test_vsflux00.rs:18:12: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _21: i32[a8]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.289380Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_20 = Eq(move _21, 2i32)","stmt_span":"tests/test_vsflux00.rs:18:12: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _20: bool[a8 = 2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.289561Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:17: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _20: bool[a8 = 2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.289755Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:17: 18:18 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _20: bool[a8 = 2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.289955Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_19 = call call assert(move _20) -> [return: bb9, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _20: bool[a8 = 2]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.290284Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_19 = call call assert(move _20) -> [return: bb9, unwind: Cleanup(bb10)]","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.290467Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb9","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.290643Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:18: 18:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.290817Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:18: 18:19 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.290993Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:19: 18:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.291171Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:18:19: 18:20 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.291346Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:10:13: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.291555Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:10:13: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.291737Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.291913Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.292091Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.292268Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.292444Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.292623Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.292801Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.292978Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.293155Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.293331Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:19:1: 19:2 (#0)","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.293510Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"return","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.293711Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"return","rcx":"{a0: int, a1: int, true ⇒ a0 = 0 + 1 ∧ a1 = 10, a2: int, $k1(a2)[a0, a1], a3: int, a4: int, a0 < a1 ⇒ a3 = a0 + 1 ∧ a4 = a1, a5: int, $k2(a5)[a0, a1, a2, a3, a4], a6: int, a7: int, a3 < a4 ⇒ a6 = a3 + 1 ∧ a7 = a4, a8: int, $k3(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_0: (), _1: i32[10], _2: Range<λb0. i32[b0]>[Range { a6, a7 }], _4: i32[a2], _7: (), _10: i32[a5], _13: (), _16: i32[a8], _19: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{}","def_id":"donald","name":"refine"},"spans":[{"bb_envs":"{}","def_id":"donald","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.326539Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb0","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.326619Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:9: 23:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.326666Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:9: 23:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.326708Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.326747Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.326786Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.326859Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _3: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.326902Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_2 = ops::range::Range::Range<i32>(0i32, move _3)","stmt_span":"tests/test_vsflux00.rs:23:21: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _3: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.327273Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_2 = ops::range::Range::Range<i32>(0i32, move _3)","stmt_span":"tests/test_vsflux00.rs:23:21: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.327349Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.327402Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.327454Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _2)","stmt_span":"tests/test_vsflux00.rs:23:9: 23:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.327519Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _2)","stmt_span":"tests/test_vsflux00.rs:23:9: 23:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.327573Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:24:9: 24:11 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.327623Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:24:9: 24:11 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.327673Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unfold(_2)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.327834Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unfold(_2)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.327884Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_4 = copy _2.1","stmt_span":"tests/test_vsflux00.rs:24:14: 24:23 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.327959Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_4 = copy _2.1","stmt_span":"tests/test_vsflux00.rs:24:14: 24:23 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328023Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:24:9: 24:11 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328090Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:24:9: 24:11 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328152Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:5: 25:20 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328200Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:5: 25:20 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328247Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:12: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328293Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:12: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328340Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:12: 25:14 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328385Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:12: 25:14 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328431Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_7 = copy _4","stmt_span":"tests/test_vsflux00.rs:25:12: 25:14 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328488Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_7 = copy _4","stmt_span":"tests/test_vsflux00.rs:25:12: 25:14 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328538Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328590Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328638Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_8 = copy _1","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328695Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_8 = copy _1","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n], _8: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328748Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_6 = Eq(move _7, move _8)","stmt_span":"tests/test_vsflux00.rs:25:12: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n], _8: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328817Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_6 = Eq(move _7, move _8)","stmt_span":"tests/test_vsflux00.rs:25:12: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328870Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328920Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.328970Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329024Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329082Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_5 = call call assert(move _6) -> [return: bb1, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329239Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_5 = call call assert(move _6) -> [return: bb1, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329299Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb1","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329346Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:19: 25:20 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329394Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:19: 25:20 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329442Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:20: 25:21 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329489Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:20: 25:21 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329535Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb2","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329582Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb2","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329635Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb2","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}","bb_env":"empty"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329689Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb2","bb_env":"Some([bindings = , reftgenerics = n: int] {_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()})"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329745Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb2","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329791Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb10)]","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329842Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb10)]","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329891Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb3","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329936Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.329982Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.330028Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.330073Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.330119Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_2)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.330264Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_2)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }], _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.330317Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = &'?2 mut _2","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }], _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.330400Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = &'?2 mut _2","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }], _4: i32[n], _5: (), _11: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.330457Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_10 = call call iter::range::{impl#6}::next<i32>(move _11) -> [return: bb4, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { 0, n }], _4: i32[n], _5: (), _11: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.331191Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_10 = call call iter::range::{impl#6}::next<i32>(move _11) -> [return: bb4, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.331296Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb4","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.331390Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_2)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.331484Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_2)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.331577Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:36: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.331670Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:36: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.331764Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.331859Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.331958Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_12 = discriminant(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.332074Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_12 = discriminant(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _12: discr(Option, _10)}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.332171Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _12) -> [1: bb5, otherwise: bb9]","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _12: discr(Option, _10)}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.332276Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _12) -> [1: bb5, otherwise: bb9]","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.332482Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb5","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.332589Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseEdge -> [real: bb6, imaginary: bb9]","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.332699Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseEdge -> [real: bb6, imaginary: bb9]","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.332811Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb6","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.332917Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.333018Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.333114Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_13 = copy (_10 as Some).0","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.333224Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_13 = copy (_10 as Some).0","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.333323Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:9: 27:23 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.333420Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:9: 27:23 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.333518Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.333615Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.333717Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.333814Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.333914Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.334024Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _16: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.334126Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _16: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.334246Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _15: bool[0 ≤ a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.334350Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _15: bool[0 ≤ a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.334452Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _15: bool[0 ≤ a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.334559Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_14 = call call assert(move _15) -> [return: bb7, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _15: bool[0 ≤ a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.334764Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_14 = call call assert(move _15) -> [return: bb7, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.334869Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb7","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.334968Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:22: 27:23 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.335067Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:22: 27:23 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.335166Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:23: 27:24 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.335265Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:23: 27:24 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.335364Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:9: 28:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.335467Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:9: 28:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.335566Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.335665Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.335766Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.335866Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.335965Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.336079Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _19: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.336182Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _19: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.336285Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _19: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.336386Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _19: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.336503Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _19: i32[a2], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.336608Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _19: i32[a2], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.336733Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.336841Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.336943Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.337051Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.337154Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.337257Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_17 = call call assert(move _18) -> [return: bb8, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.337468Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_17 = call call assert(move _18) -> [return: bb8, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.337575Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb8","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.337676Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:21: 28:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.337795Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:21: 28:22 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.337905Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:22: 28:23 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.338021Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:22: 28:23 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.338134Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_9 = ()","stmt_span":"tests/test_vsflux00.rs:26:38: 29:6 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.338267Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_9 = ()","stmt_span":"tests/test_vsflux00.rs:26:38: 29:6 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.338373Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.338474Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.338575Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.338677Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.338782Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb2","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.338881Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb2","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.338983Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unfold(_2)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.339157Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unfold(_2)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.339255Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_10)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a2]), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.339439Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_10)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: (), _9: (), _10: Option<λb0. { i32[b0] | * }>[Option { true }], _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.339544Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb2","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: (), _9: (), _10: Option<λb0. { i32[b0] | * }>[Option { true }], _13: i32[a2], _14: (), _17: ()}","bb_env":"[bindings = , reftgenerics = n: int] {_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.339675Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb2","bb_env":"Some([bindings = , reftgenerics = n: int] {_1: i32[n], _2: Range::Range(∃b0. { i32[b0] | * }, ∃b1. { i32[b1] | * }), _4: i32[n], _5: ()})"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.339776Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb9","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.339868Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.339959Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.340049Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.340155Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.340247Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.340338Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.340427Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.340517Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.340610Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.340701Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.340791Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.340881Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.340971Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"return","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341075Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"return","rcx":"{n = 99, *, *, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a0, a1 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341220Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb2","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341269Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341319Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341377Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb3","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341426Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341476Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341526Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341577Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341626Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_2)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341764Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_2)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { a0, a1 }], _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341820Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = &'?2 mut _2","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { a0, a1 }], _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341899Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = &'?2 mut _2","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { a0, a1 }], _4: i32[n], _5: (), _11: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.341960Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_10 = call call iter::range::{impl#6}::next<i32>(move _11) -> [return: bb4, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | * }>[Range { a0, a1 }], _4: i32[n], _5: (), _11: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.342642Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_10 = call call iter::range::{impl#6}::next<i32>(move _11) -> [return: bb4, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.342752Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb4","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.342851Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_2)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.342953Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_2)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.343061Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:36: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.343179Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:36: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.343294Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.343403Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.343516Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_12 = discriminant(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.343645Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_12 = discriminant(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _12: discr(Option, _10)}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.343755Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _12) -> [1: bb5, otherwise: bb9]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _12: discr(Option, _10)}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.343864Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _12) -> [1: bb5, otherwise: bb9]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.344044Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb5","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.344147Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseEdge -> [real: bb6, imaginary: bb9]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.344249Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseEdge -> [real: bb6, imaginary: bb9]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.344353Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb6","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.344476Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.344594Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.344721Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_13 = copy (_10 as Some).0","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.344852Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_13 = copy (_10 as Some).0","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.344960Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:9: 27:23 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.345064Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:9: 27:23 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.345170Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.345279Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.345383Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.345488Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.345593Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.345711Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _16: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.345830Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _16: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.345960Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.346073Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.346185Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.346296Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_14 = call call assert(move _15) -> [return: bb7, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.346508Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_14 = call call assert(move _15) -> [return: bb7, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.346620Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb7","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.346726Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:22: 27:23 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.346834Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:22: 27:23 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.346941Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:23: 27:24 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.347049Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:23: 27:24 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.347155Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:9: 28:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.347262Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:9: 28:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.347369Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.347476Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.347582Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.347689Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.347798Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.347921Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.348031Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.348139Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.348247Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.348378Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.348506Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.348667Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.348798Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.348918Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.349029Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.349139Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.349249Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_17 = call call assert(move _18) -> [return: bb8, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.349467Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_17 = call call assert(move _18) -> [return: bb8, unwind: Cleanup(bb10)]","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.349582Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb8","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.349689Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:21: 28:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.349796Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:21: 28:22 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.349904Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:22: 28:23 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.350012Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:22: 28:23 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.350119Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_9 = ()","stmt_span":"tests/test_vsflux00.rs:26:38: 29:6 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.350249Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_9 = ()","stmt_span":"tests/test_vsflux00.rs:26:38: 29:6 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.350360Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.350471Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.350582Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.350690Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.350799Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb2","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.350905Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb2","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.351013Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unfold(_2)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.351185Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unfold(_2)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range::Range(i32[a2], i32[a3]), _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.351290Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_10)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range::Range(i32[a2], i32[a3]), _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.351477Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_10)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range::Range(i32[a2], i32[a3]), _4: i32[n], _5: (), _9: (), _10: Option<λb0. { i32[b0] | * }>[Option { true }], _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.351587Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb2","env":"{_1: i32[n], _2: Range::Range(i32[a2], i32[a3]), _4: i32[n], _5: (), _9: (), _10: Option<λb0. { i32[b0] | * }>[Option { true }], _13: i32[a4], _14: (), _17: ()}","bb_env":"[bindings = , reftgenerics = n: int] {_1: i32[n], _2: Range::Range(∃b0. { i32[b0] | * }, ∃b1. { i32[b1] | * }), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.351716Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb2","bb_env":"Some([bindings = , reftgenerics = n: int] {_1: i32[n], _2: Range::Range(∃b0. { i32[b0] | * }, ∃b1. { i32[b1] | * }), _4: i32[n], _5: ()})"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.351815Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb9","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.351911Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.352009Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.352106Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.352227Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.352327Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.352426Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.352525Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.352623Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.352720Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.352818Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.352916Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.353016Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.353114Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"return","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.353225Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"return","rcx":"{n = 99, *, *, a0: int, *, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"def_id":"goofy","name":"shape"},"spans":[{"def_id":"goofy","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.353529Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb0","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.353576Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:9: 23:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.353622Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:9: 23:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.353668Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.353722Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.353787Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.353844Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _3: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.353904Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_2 = ops::range::Range::Range<i32>(0i32, move _3)","stmt_span":"tests/test_vsflux00.rs:23:21: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _3: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.354252Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_2 = ops::range::Range::Range<i32>(0i32, move _3)","stmt_span":"tests/test_vsflux00.rs:23:21: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.354326Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.354390Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:23:24: 23:25 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.354450Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _2)","stmt_span":"tests/test_vsflux00.rs:23:9: 23:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.354510Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _2)","stmt_span":"tests/test_vsflux00.rs:23:9: 23:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.354571Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:24:9: 24:11 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.354630Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:24:9: 24:11 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.354694Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unfold(_2)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.354859Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unfold(_2)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n])}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.354921Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_4 = copy _2.1","stmt_span":"tests/test_vsflux00.rs:24:14: 24:23 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n])}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.354995Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_4 = copy _2.1","stmt_span":"tests/test_vsflux00.rs:24:14: 24:23 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355060Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:24:9: 24:11 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355126Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:24:9: 24:11 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355191Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:5: 25:20 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355255Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:5: 25:20 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355319Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:12: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355382Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:12: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355448Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:12: 25:14 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355511Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:12: 25:14 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355574Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_7 = copy _4","stmt_span":"tests/test_vsflux00.rs:25:12: 25:14 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355650Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_7 = copy _4","stmt_span":"tests/test_vsflux00.rs:25:12: 25:14 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355716Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355786Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355852Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_8 = copy _1","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355928Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_8 = copy _1","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n], _8: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.355996Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_6 = Eq(move _7, move _8)","stmt_span":"tests/test_vsflux00.rs:25:12: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _7: i32[n], _8: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356083Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_6 = Eq(move _7, move _8)","stmt_span":"tests/test_vsflux00.rs:25:12: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356157Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356224Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356291Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356358Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:18: 25:19 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356426Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_5 = call call assert(move _6) -> [return: bb1, unwind: Cleanup(bb10)]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _6: bool[n = n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356585Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_5 = call call assert(move _6) -> [return: bb1, unwind: Cleanup(bb10)]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356655Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb1","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356718Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:19: 25:20 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356782Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:19: 25:20 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356848Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:20: 25:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356915Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:25:20: 25:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.356981Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb2","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.357044Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb2","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.357112Z","level":"DEBUG","fields":{"event":"refine_goto","target":"bb2","rcx":"{n = 99, $k1(0)[n], $k1(n)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[0], i32[n]), _4: i32[n], _5: ()}","bb_env":"[bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.357341Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb2","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.357417Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb10)]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.357492Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb10)]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.357569Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb3","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.357642Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.357717Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.357796Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.357870Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.357945Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_2)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range::Range(i32[a0], i32[a1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.358163Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_2)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k2(b0)[n, a0, a1] }>[Range { a0, a1 }], _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.358248Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = &'?2 mut _2","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k2(b0)[n, a0, a1] }>[Range { a0, a1 }], _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.358372Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = &'?2 mut _2","stmt_span":"tests/test_vsflux00.rs:26:25: 26:30 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k2(b0)[n, a0, a1] }>[Range { a0, a1 }], _4: i32[n], _5: (), _11: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.358463Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_10 = call call iter::range::{impl#6}::next<i32>(move _11) -> [return: bb4, unwind: Cleanup(bb10)]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _2: Range<λb0. { i32[b0] | $k2(b0)[n, a0, a1] }>[Range { a0, a1 }], _4: i32[n], _5: (), _11: ptr(mut, _2)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.359234Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_10 = call call iter::range::{impl#6}::next<i32>(move _11) -> [return: bb4, unwind: Cleanup(bb10)]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.359374Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb4","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.359514Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_2)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.359641Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_2)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.359761Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:36: 26:37 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.359883Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:36: 26:37 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.360004Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.360129Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.360250Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_12 = discriminant(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.360391Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_12 = discriminant(_10)","stmt_span":"tests/test_vsflux00.rs:26:25: 26:37 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _12: discr(Option, _10)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.360517Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _12) -> [1: bb5, otherwise: bb9]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _12: discr(Option, _10)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.360650Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _12) -> [1: bb5, otherwise: bb9]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.360854Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb5","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.360975Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseEdge -> [real: bb6, imaginary: bb9]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.361113Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseEdge -> [real: bb6, imaginary: bb9]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.361269Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb6","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.361427Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.361549Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.361671Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_13 = copy (_10 as Some).0","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4])}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.361809Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_13 = copy (_10 as Some).0","stmt_span":"tests/test_vsflux00.rs:26:20: 26:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.361941Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:9: 27:23 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.362064Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:9: 27:23 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.362190Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.362314Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.362441Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.362564Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.362688Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.362825Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _16: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.362959Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _16: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.363107Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:27:16: 27:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.363238Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.363366Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:21: 27:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.363510Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_14 = call call assert(move _15) -> [return: bb7, unwind: Cleanup(bb10)]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.363761Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_14 = call call assert(move _15) -> [return: bb7, unwind: Cleanup(bb10)]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.363891Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb7","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.364016Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:22: 27:23 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.364145Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:22: 27:23 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.364269Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:23: 27:24 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.364406Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:27:23: 27:24 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.364553Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:9: 28:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.364692Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:9: 28:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.364833Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.364966Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.365094Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.365224Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.365348Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.365489Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:28:16: 28:17 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.365616Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.365750Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.365878Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.366022Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.366154Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _19: i32[a4], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.366312Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:28:16: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.366444Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.366574Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.366705Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.366838Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:20: 28:21 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.366968Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_17 = call call assert(move _18) -> [return: bb8, unwind: Cleanup(bb10)]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.367204Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_17 = call call assert(move _18) -> [return: bb8, unwind: Cleanup(bb10)]","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.367338Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb8","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.367470Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:21: 28:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.367602Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:21: 28:22 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.367732Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:22: 28:23 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.367864Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:28:22: 28:23 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.367996Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_9 = ()","stmt_span":"tests/test_vsflux00.rs:26:38: 29:6 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.368160Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_9 = ()","stmt_span":"tests/test_vsflux00.rs:26:38: 29:6 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.368294Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.368425Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.368558Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.368692Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.368823Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb2","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.368960Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb2","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.369095Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unfold(_2)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.369295Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unfold(_2)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range::Range(i32[a2], i32[a3]), _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.369423Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_10)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range::Range(i32[a2], i32[a3]), _4: i32[n], _5: (), _9: (), _10: Option::Some(i32[a4]), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.369707Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_10)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range::Range(i32[a2], i32[a3]), _4: i32[n], _5: (), _9: (), _10: Option<λb0. { i32[b0] | $k3(b0)[n, a0, a1, a2, a3, a4] }>[Option { true }], _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.369869Z","level":"DEBUG","fields":{"event":"refine_goto","target":"bb2","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _2: Range::Range(i32[a2], i32[a3]), _4: i32[n], _5: (), _9: (), _10: Option<λb0. { i32[b0] | $k3(b0)[n, a0, a1, a2, a3, a4] }>[Option { true }], _13: i32[a4], _14: (), _17: ()}","bb_env":"[bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.370242Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb9","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.370368Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.370488Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.370609Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.370750Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:26:5: 29:6 (#77)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.370873Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.370995Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.371117Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.371238Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:29:5: 29:6 (#77)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.371367Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.371487Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.371608Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.371729Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:30:1: 30:2 (#0)","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.371854Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"return","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.371992Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"return","rcx":"{n = 99, $k1(0)[n], $k1(n)[n], a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _2: Range<λb0. i32[b0]>[Range { a2, a3 }], _4: i32[n], _5: (), _10: Option::None}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"},"spans":[{"bb_envs":"{DefId(0:219 ~ test_vsflux00[c8ab]::goofy): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _2: Range::Range(i32[b0], i32[b1]), _4: i32[n], _5: ()}}}","def_id":"goofy","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.412660Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb0","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.412731Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.412775Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.412820Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.412861Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.412901Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.412946Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.412991Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_4 = copy _1","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.413069Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_4 = copy _1","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.413112Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_3 = ops::range::Range::Range<i32>(0i32, move _4)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _4: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.413465Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_3 = ops::range::Range::Range<i32>(0i32, move _4)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _3: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.413530Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _3: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.413583Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _3: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.413633Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_2 = call call iter::traits::collect::{impl#1}::into_iter<ops::range::Range<i32>>(move _3) -> [return: bb1, unwind: Cleanup(bb11)]","rcx":"{n = 99}","env":"{_1: i32[n], _3: Range<λb0. { i32[b0] | * }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414087Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_2 = call call iter::traits::collect::{impl#1}::into_iter<ops::range::Range<i32>>(move _3) -> [return: bb1, unwind: Cleanup(bb11)]","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414150Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb1","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414198Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414249Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414298Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_2)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414346Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_2)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414394Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414444Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414500Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_5 = move _2","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414584Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_5 = move _2","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414634Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb2","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414680Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb2","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414729Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb2","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}","bb_env":"empty"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414780Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb2","bb_env":"Some([bindings = , reftgenerics = n: int] {_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]})"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414841Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb2","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414887Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb11)]","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414935Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb11)]","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.414983Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb3","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415034Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415081Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415128Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415176Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415227Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415273Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415321Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415368Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415421Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_10 = &'?2 mut _5","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415503Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_10 = &'?2 mut _5","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415555Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unfold(_10)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415610Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unfold(_10)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415657Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_9 = &'?3 mut *_10","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415741Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_9 = &'?3 mut *_10","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }], _9: ptr(mut, _5), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.415795Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_8 = call call iter::range::{impl#6}::next<i32>(move _9) -> [return: bb4, unwind: Cleanup(bb11)]","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }], _9: ptr(mut, _5), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.416539Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_8 = call call iter::range::{impl#6}::next<i32>(move _9) -> [return: bb4, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.416651Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb4","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.416745Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_5)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.416847Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_5)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.416939Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(*_10)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.417034Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(*_10)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.417126Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.417221Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.417314Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.417408Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.417503Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = discriminant(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.417620Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = discriminant(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5), _11: discr(Option, _8)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.417724Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _11) -> [0: bb6, 1: bb7, otherwise: bb5]","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5), _11: discr(Option, _8)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.417843Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _11) -> [0: bb6, 1: bb7, otherwise: bb5]","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.418013Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb6","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.418108Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseEdge -> [real: bb8, imaginary: bb7]","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.418206Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseEdge -> [real: bb8, imaginary: bb7]","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.418298Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb8","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.418392Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.418508Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.418612Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.418703Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.418797Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.418892Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.418983Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.419073Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.419163Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.419251Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.419339Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.419429Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.419518Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"return","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.419624Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"return","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.419800Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb7","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.419892Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.419986Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.420080Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_13 = copy (_8 as Some).0","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.420188Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_13 = copy (_8 as Some).0","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.420291Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:9: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.420386Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:9: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.420480Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.420583Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.420678Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.420773Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.420867Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.420974Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _16: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.421076Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _16: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.421197Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _15: bool[0 ≤ a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.421300Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _15: bool[0 ≤ a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.421399Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _15: bool[0 ≤ a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.421499Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_14 = call call assert(move _15) -> [return: bb9, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _15: bool[0 ≤ a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.421711Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_14 = call call assert(move _15) -> [return: bb9, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.421815Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb9","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.421911Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:22: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.422013Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:22: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.422109Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:23: 35:24 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.422205Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:23: 35:24 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.422301Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:9: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.422403Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:9: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.422504Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.422599Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.422694Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.422795Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.422898Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.423011Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _19: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.423130Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _19: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.423238Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _19: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.423347Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _19: i32[a2]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.423475Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _19: i32[a2], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.423591Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _19: i32[a2], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.423735Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.423838Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.423938Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.424043Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.424144Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.424244Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_17 = call call assert(move _18) -> [return: bb10, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _18: bool[a2 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.424465Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_17 = call call assert(move _18) -> [return: bb10, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.424570Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb10","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.424667Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:21: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.424766Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:21: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.424863Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:22: 36:23 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.424963Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:22: 36:23 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.425060Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_7 = ()","stmt_span":"tests/test_vsflux00.rs:34:19: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.425187Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_7 = ()","stmt_span":"tests/test_vsflux00.rs:34:19: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.425288Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.425391Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.425490Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.425588Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.425687Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.425786Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.425887Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.425985Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.426090Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_6 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.426212Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_6 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _6: (), _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.426318Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb2","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _6: (), _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.426420Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb2","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _6: (), _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.426524Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_8)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _6: (), _7: (), _8: Option::Some(i32[a2]), _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.426714Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_8)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | * }>[Option { true }], _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.426825Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_10)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | * }>[Option { true }], _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.426931Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_10)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n, (0 < n) = true, a2: int, a2 = 0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | * }>[Option { true }], _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.427040Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb2","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | * }>[Option { true }], _10: ptr(mut, _5), _13: i32[a2], _14: (), _17: ()}","bb_env":"[bindings = , reftgenerics = n: int] {_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.427169Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb2","bb_env":"Some([bindings = , reftgenerics = n: int] {_1: i32[n], _5: ∃b0, b1. { Range<λb2. i32[b2]>[Range { b0, b1 }] | * }})"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.427224Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb5","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.427313Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForMatchedPlace(None), _8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.427412Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForMatchedPlace(None), _8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.427508Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"unreachable","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.427596Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"unreachable","rcx":"{n = 99, a0: int, a1: int, 0 < n ⇒ a0 = 0 + 1 ∧ a1 = n}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _8: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < n }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.427751Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb2","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.427814Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.427885Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.427954Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb3","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428055Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428134Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428194Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428247Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428299Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428352Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428420Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428488Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428551Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_10 = &'?2 mut _5","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428655Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_10 = &'?2 mut _5","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428714Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unfold(_10)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428769Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unfold(_10)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428821Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_9 = &'?3 mut *_10","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428894Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_9 = &'?3 mut *_10","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _9: ptr(mut, _5), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.428959Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_8 = call call iter::range::{impl#6}::next<i32>(move _9) -> [return: bb4, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, *}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _9: ptr(mut, _5), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.429716Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_8 = call call iter::range::{impl#6}::next<i32>(move _9) -> [return: bb4, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.429824Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb4","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.429917Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_5)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.430015Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_5)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.430108Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(*_10)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.430202Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(*_10)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.430303Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.430397Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.430490Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.430583Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.430681Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = discriminant(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.430803Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = discriminant(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5), _11: discr(Option, _8)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.430900Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _11) -> [0: bb6, 1: bb7, otherwise: bb5]","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5), _11: discr(Option, _8)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.431008Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _11) -> [0: bb6, 1: bb7, otherwise: bb5]","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.431167Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb6","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.431259Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseEdge -> [real: bb8, imaginary: bb7]","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.431348Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseEdge -> [real: bb8, imaginary: bb7]","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.431439Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb8","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.431527Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.431645Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.431741Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.431831Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.431920Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.432010Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.432104Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.432194Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.432287Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.432382Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.432471Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.432559Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.432655Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"return","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.432762Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"return","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.432936Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb7","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.433031Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.433126Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.433226Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_13 = copy (_8 as Some).0","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.433347Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_13 = copy (_8 as Some).0","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.433447Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:9: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.433543Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:9: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.433641Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.433759Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.433871Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.433978Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.434091Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.434214Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _16: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.434319Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _16: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.434439Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.434548Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.434648Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.434749Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_14 = call call assert(move _15) -> [return: bb9, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.434971Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_14 = call call assert(move _15) -> [return: bb9, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.435075Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb9","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.435173Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:22: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.435271Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:22: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.435369Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:23: 35:24 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.435472Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:23: 35:24 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.435572Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:9: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.435671Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:9: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.435771Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.435867Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.435964Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.436060Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.436158Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.436272Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.436372Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.436474Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.436573Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.436688Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.436793Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.436918Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.437024Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.437126Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.437233Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.437336Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.437440Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_17 = call call assert(move _18) -> [return: bb10, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.437674Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_17 = call call assert(move _18) -> [return: bb10, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.437780Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb10","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.437884Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:21: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.437990Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:21: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.438088Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:22: 36:23 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.438196Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:22: 36:23 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.438295Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_7 = ()","stmt_span":"tests/test_vsflux00.rs:34:19: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.438425Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_7 = ()","stmt_span":"tests/test_vsflux00.rs:34:19: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.438526Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.438626Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.438725Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.438830Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.438938Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.439045Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.439158Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.439268Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.439387Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_6 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.439524Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_6 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.439633Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb2","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.439742Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb2","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.439843Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_8)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.440045Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_8)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | * }>[Option { true }], _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.440155Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_10)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | * }>[Option { true }], _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.440262Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_10)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | * }>[Option { true }], _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.440369Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb2","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | * }>[Option { true }], _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}","bb_env":"[bindings = , reftgenerics = n: int] {_1: i32[n], _5: ∃b0, b1. { Range<λb2. i32[b2]>[Range { b0, b1 }] | * }}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.440503Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb2","bb_env":"Some([bindings = , reftgenerics = n: int] {_1: i32[n], _5: ∃b0, b1. { Range<λb2. i32[b2]>[Range { b0, b1 }] | * }})"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.440558Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb5","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.440654Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForMatchedPlace(None), _8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.440748Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForMatchedPlace(None), _8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.440842Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"unreachable","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.440935Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"unreachable","rcx":"{n = 99, a0: int, a1: int, *, a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"def_id":"mickey","name":"shape"},"spans":[{"def_id":"mickey","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.441249Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb0","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.441297Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.441343Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.441392Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.441437Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.441483Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.441527Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.441571Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_4 = copy _1","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.441630Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_4 = copy _1","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.441686Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_3 = ops::range::Range::Range<i32>(0i32, move _4)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _4: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442014Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_3 = ops::range::Range::Range<i32>(0i32, move _4)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _3: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442086Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _3: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442146Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#0)","rcx":"{n = 99}","env":"{_1: i32[n], _3: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442206Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_2 = call call iter::traits::collect::{impl#1}::into_iter<ops::range::Range<i32>>(move _3) -> [return: bb1, unwind: Cleanup(bb11)]","rcx":"{n = 99}","env":"{_1: i32[n], _3: Range<λb0. { i32[b0] | $k1(b0)[n] }>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442523Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_2 = call call iter::traits::collect::{impl#1}::into_iter<ops::range::Range<i32>>(move _3) -> [return: bb1, unwind: Cleanup(bb11)]","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442589Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb1","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442642Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442697Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442752Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_2)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442807Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_2)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442866Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442921Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.442975Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_5 = move _2","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _2: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443072Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_5 = move _2","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443128Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb2","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443183Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb2","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443241Z","level":"DEBUG","fields":{"event":"refine_goto","target":"bb2","rcx":"{n = 99}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { 0, n }]}","bb_env":"[bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443482Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb2","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443546Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443610Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseUnwind -> [real: bb3, cleanup: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443682Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb3","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443753Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443817Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443886Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.443949Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.444012Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.444082Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.444146Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.444210Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.444279Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_10 = &'?2 mut _5","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.444370Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_10 = &'?2 mut _5","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.444462Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unfold(_10)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.444551Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unfold(_10)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.444696Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_9 = &'?3 mut *_10","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.444831Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_9 = &'?3 mut *_10","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _9: ptr(mut, _5), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.444907Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_8 = call call iter::range::{impl#6}::next<i32>(move _9) -> [return: bb4, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n]}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a0, a1 }], _9: ptr(mut, _5), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.445639Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_8 = call call iter::range::{impl#6}::next<i32>(move _9) -> [return: bb4, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.445762Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb4","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.445869Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_5)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.445978Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_5)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.446083Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(*_10)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.446198Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(*_10)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.446305Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.446420Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:17: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.446533Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.446646Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.446755Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = discriminant(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.446894Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = discriminant(_8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5), _11: discr(Option, _8)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.447024Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _11) -> [0: bb6, 1: bb7, otherwise: bb5]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5), _11: discr(Option, _8)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.447150Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _11) -> [0: bb6, 1: bb7, otherwise: bb5]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.447308Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb6","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.447411Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseEdge -> [real: bb8, imaginary: bb7]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.447519Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseEdge -> [real: bb8, imaginary: bb7]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.447627Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb8","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.447734Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.447856Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.447962Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.448067Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.448176Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.448286Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.448389Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.448493Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.448597Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.448704Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.448809Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.448912Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.449017Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"return","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.449142Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"return","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = false}","env":"{_0: (), _1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::None, _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.449339Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb7","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.449448Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.449557Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.449670Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_13 = copy (_8 as Some).0","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.449818Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_13 = copy (_8 as Some).0","stmt_span":"tests/test_vsflux00.rs:34:9: 34:10 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.449946Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:9: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.450072Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:9: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.450192Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.450314Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.450432Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.450542Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.450653Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.450776Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_16 = copy _13","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _16: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.450894Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _16: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.451028Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_15 = Le(0i32, move _16)","stmt_span":"tests/test_vsflux00.rs:35:16: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.451150Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.451265Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:21: 35:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.451385Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_14 = call call assert(move _15) -> [return: bb9, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _15: bool[0 ≤ a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.451611Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_14 = call call assert(move _15) -> [return: bb9, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.451732Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb9","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.451845Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:22: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.451959Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:22: 35:23 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.452076Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:23: 35:24 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.452189Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:35:23: 35:24 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.452301Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:9: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.452415Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:9: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.452530Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.452644Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.452756Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.452869Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.452984Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.453113Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_19 = copy _13","stmt_span":"tests/test_vsflux00.rs:36:16: 36:17 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.453230Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.453344Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.453463Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.453592Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_20 = copy _1","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.453710Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _19: i32[a4], _20: i32[n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.453853Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_18 = Lt(move _19, move _20)","stmt_span":"tests/test_vsflux00.rs:36:16: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.453972Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.454091Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.454209Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.454325Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:20: 36:21 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.454442Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_17 = call call assert(move _18) -> [return: bb10, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _18: bool[a4 < n]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.454682Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_17 = call call assert(move _18) -> [return: bb10, unwind: Cleanup(bb11)]","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.454809Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb10","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.454922Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:21: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.455047Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:21: 36:22 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.455207Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:22: 36:23 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.455351Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:36:22: 36:23 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.455500Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_7 = ()","stmt_span":"tests/test_vsflux00.rs:34:19: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.455667Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_7 = ()","stmt_span":"tests/test_vsflux00.rs:34:19: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.455803Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.455927Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#0)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.456041Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.456156Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.456271Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.456392Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.456507Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.456620Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:37:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.456739Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_6 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.456888Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_6 = ()","stmt_span":"tests/test_vsflux00.rs:34:5: 37:6 (#78)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.457010Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb2","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.457124Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb2","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.457240Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_8)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option::Some(i32[a4]), _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.457525Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_8)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | $k2(b1)[n, a0, a1, a2, a3, a4] }>[Option { true }], _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.457659Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_10)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | $k2(b1)[n, a0, a1, a2, a3, a4] }>[Option { true }], _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.457789Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_10)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | $k2(b1)[n, a0, a1, a2, a3, a4] }>[Option { true }], _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.457927Z","level":"DEBUG","fields":{"event":"refine_goto","target":"bb2","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1, (a0 < a1) = true, a4: int, a4 = a0}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _6: (), _7: (), _8: Option<λb1. { i32[b1] | $k2(b1)[n, a0, a1, a2, a3, a4] }>[Option { true }], _10: ptr(mut, _5), _13: i32[a4], _14: (), _17: ()}","bb_env":"[bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.458237Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb5","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.458345Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForMatchedPlace(None), _8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.458460Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForMatchedPlace(None), _8)","stmt_span":"tests/test_vsflux00.rs:34:14: 34:18 (#79)","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.458573Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"unreachable","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.458678Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"unreachable","rcx":"{n = 99, a0: int, a1: int, $k0(a0, a1)[n], a2: int, a3: int, a0 < a1 ⇒ a2 = a0 + 1 ∧ a3 = a1}","env":"{_1: i32[n], _5: Range<λb0. i32[b0]>[Range { a2, a3 }], _8: Option<λb1. { i32[b1] | b1 = a0 }>[Option { a0 < a1 }], _10: ptr(mut, _5)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"},"spans":[{"bb_envs":"{DefId(0:220 ~ test_vsflux00[c8ab]::mickey): {bb2: [bindings = , reftgenerics = n: int] for<?b0, ?b1> $k0(b0, b1)[n] ⇒ {_1: i32[n], _5: Range<λb2. i32[b2]>[Range { b0, b1 }]}}}","def_id":"mickey","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.490217Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb0","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490273Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:8: 46:16 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490315Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:8: 46:16 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490350Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:8: 46:11 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490384Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:8: 46:11 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490419Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:46:8: 46:11 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490481Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:46:8: 46:11 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0], _3: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490520Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_2 = Ge(move _3, 0i32)","stmt_span":"tests/test_vsflux00.rs:46:8: 46:16 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0], _3: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490579Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_2 = Ge(move _3, 0i32)","stmt_span":"tests/test_vsflux00.rs:46:8: 46:16 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0], _2: bool[a0 ≥ 0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490621Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _2) -> [0: bb16, otherwise: bb1]","rcx":"{a0: int}","env":"{_1: i32[a0], _2: bool[a0 ≥ 0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490668Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _2) -> [0: bb16, otherwise: bb1]","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490716Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb16","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490755Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:15: 46:16 (#0)","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490795Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:15: 46:16 (#0)","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490835Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:55:6: 55:6 (#0)","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490901Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:55:6: 55:6 (#0)","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_0: (), _1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490944Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb17","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_0: (), _1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.490984Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb17","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_0: (), _1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491052Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb1","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491089Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:15: 46:16 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491127Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:15: 46:16 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491165Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:47:13: 47:20 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491202Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:47:13: 47:20 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491241Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_4 = 0i32","stmt_span":"tests/test_vsflux00.rs:47:23: 47:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491300Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_4 = 0i32","stmt_span":"tests/test_vsflux00.rs:47:23: 47:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491342Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:47:13: 47:20 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491384Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:47:13: 47:20 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491431Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491472Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491513Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491557Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491597Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491637Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491677Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:21: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491717Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:21: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491757Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_8 = copy _1","stmt_span":"tests/test_vsflux00.rs:48:21: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491818Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_8 = copy _1","stmt_span":"tests/test_vsflux00.rs:48:21: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _8: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.491862Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_7 = ops::range::Range::Range<i32>(0i32, move _8)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _8: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.492197Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_7 = ops::range::Range::Range<i32>(0i32, move _8)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _7: Range<λb0. { i32[b0] | * }>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.492263Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _7: Range<λb0. { i32[b0] | * }>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.492316Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _7: Range<λb0. { i32[b0] | * }>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.492374Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_6 = call call iter::traits::collect::{impl#1}::into_iter<ops::range::Range<i32>>(move _7) -> [return: bb2, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _7: Range<λb0. { i32[b0] | * }>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.492729Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_6 = call call iter::traits::collect::{impl#1}::into_iter<ops::range::Range<i32>>(move _7) -> [return: bb2, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.492797Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb2","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.492856Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.492910Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.492969Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_6)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493022Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_6)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493074Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493124Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493175Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_9 = move _6","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493262Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_9 = move _6","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493315Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb3","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493362Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb3","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493415Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb3","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}","bb_env":"empty"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493467Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb3","bb_env":"Some([bindings = a0: int, reftgenerics = ] {_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]})"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493521Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb3","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493573Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseUnwind -> [real: bb4, cleanup: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493624Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseUnwind -> [real: bb4, cleanup: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493680Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb4","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493729Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493780Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493831Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493880Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493930Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.493980Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.494030Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.494079Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.494135Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_14 = &'?2 mut _9","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.494228Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_14 = &'?2 mut _9","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.494283Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unfold(_14)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.494339Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unfold(_14)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.494396Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_13 = &'?3 mut *_14","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.494505Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_13 = &'?3 mut *_14","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }], _13: ptr(mut, _9), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.494570Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_12 = call call iter::range::{impl#6}::next<i32>(move _13) -> [return: bb5, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }], _13: ptr(mut, _9), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.495401Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_12 = call call iter::range::{impl#6}::next<i32>(move _13) -> [return: bb5, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.495519Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb5","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.495623Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_9)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.495721Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_9)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.495819Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(*_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.495919Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(*_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.496012Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.496110Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.496206Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.496302Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.496402Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_15 = discriminant(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.496541Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_15 = discriminant(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9), _15: discr(Option, _12)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.496641Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _15) -> [0: bb7, 1: bb8, otherwise: bb6]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9), _15: discr(Option, _12)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.496747Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _15) -> [0: bb7, 1: bb8, otherwise: bb6]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.496907Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb7","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.497019Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseEdge -> [real: bb9, imaginary: bb8]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.497108Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseEdge -> [real: bb9, imaginary: bb8]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.497198Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb9","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.497288Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_5 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.497403Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_5 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.497497Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.497592Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.497688Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.497797Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.497899Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.498005Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.498107Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.498212Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.498311Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.498402Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.498496Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.498590Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.498681Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.498772Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.498864Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.498962Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.499053Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_24 = copy _4","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.499163Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_24 = copy _4","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.499258Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.499352Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.499447Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_25 = copy _1","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.499553Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_25 = copy _1","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[0], _25: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.499650Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_23 = Le(move _24, move _25)","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[0], _25: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.499769Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_23 = Le(move _24, move _25)","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[0 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.499873Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[0 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.499967Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[0 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.500066Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[0 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.500160Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[0 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.500261Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_0 = call call assert(move _23) -> [return: bb15, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[0 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.500473Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_0 = call call assert(move _23) -> [return: bb15, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.500576Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb15","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.500668Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:26: 54:27 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.500764Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:26: 54:27 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.500857Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:55:5: 55:6 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.500952Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:55:5: 55:6 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.501044Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb17","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.501133Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb17","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.501226Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.501374Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | * }>[Option { false }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.501475Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | * }>[Option { false }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.501573Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = false}","env":"{_0: (), _1: i32[a0], _4: i32[0], _5: (), _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | * }>[Option { false }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.501784Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb8","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.501897Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.501996Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.502093Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_17 = copy (_12 as Some).0","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.502203Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_17 = copy (_12 as Some).0","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.502306Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:13: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.502407Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:13: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.502506Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.502604Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.502703Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.502800Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.502899Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_20 = copy _4","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.503008Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_20 = copy _4","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _20: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.503133Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _20: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.503244Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _20: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.503356Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_21 = copy _17","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _20: i32[0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.503478Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_21 = copy _17","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _20: i32[0], _21: i32[a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.503592Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_19 = Le(move _20, move _21)","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _20: i32[0], _21: i32[a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.503721Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_19 = Le(move _20, move _21)","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _19: bool[0 ≤ a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.503834Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _19: bool[0 ≤ a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.503936Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _19: bool[0 ≤ a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.504042Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _19: bool[0 ≤ a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.504157Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _19: bool[0 ≤ a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.504260Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_18 = call call assert(move _19) -> [return: bb10, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _19: bool[0 ≤ a3]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.504465Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_18 = call call assert(move _19) -> [return: bb10, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.504570Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb10","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.504668Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:28: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.504768Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:28: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.504871Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:29: 49:30 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.504970Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:29: 49:30 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.505070Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:50:16: 50:22 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.505167Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:50:16: 50:22 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.505271Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_22 = call call cond() -> [return: bb11, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.505466Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_22 = call call cond() -> [return: bb11, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: (), _22: bool[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.505573Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb11","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: (), _22: bool[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.505679Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _22) -> [0: bb13, otherwise: bb12]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: (), _22: bool[a4]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.505791Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _22) -> [0: bb13, otherwise: bb12]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.505895Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb13","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, ¬a4}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.505997Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:52:14: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, ¬a4}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.506119Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:52:14: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, ¬a4}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.506225Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, ¬a4}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.506327Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, ¬a4}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.506437Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb14","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}","bb_env":"empty"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.506513Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb14","bb_env":"Some([bindings = a0: int, a1: int, a2: int, a3: int, a4: bool, reftgenerics = ] {_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()})"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.506573Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb12","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a4}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.506671Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_4 = Add(copy _4, 1i32)","stmt_span":"tests/test_vsflux00.rs:51:17: 51:25 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a4}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.506793Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_4 = Add(copy _4, 1i32)","stmt_span":"tests/test_vsflux00.rs:51:17: 51:25 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a4}","env":"{_1: i32[a0], _4: i32[0 + 1], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.506904Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:50:23: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a4}","env":"{_1: i32[a0], _4: i32[0 + 1], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.507027Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:50:23: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a4}","env":"{_1: i32[a0], _4: i32[0 + 1], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.507134Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a4}","env":"{_1: i32[a0], _4: i32[0 + 1], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.507242Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a4}","env":"{_1: i32[a0], _4: i32[0 + 1], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.507356Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb14","env":"{_1: i32[a0], _4: i32[0 + 1], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}","bb_env":"[bindings = a0: int, a1: int, a2: int, a3: int, a4: bool, reftgenerics = ] {_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.507507Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb14","bb_env":"Some([bindings = a0: int, a1: int, a2: int, a3: int, a4: bool, reftgenerics = ] {_1: i32[a0], _4: ∃b0. { i32[b0] | * }, _9: Range<λb1. i32[b1]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()})"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.507574Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb6","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.507667Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForMatchedPlace(None), _12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.507763Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForMatchedPlace(None), _12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.507858Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"unreachable","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.507950Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"unreachable","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _12: Option<λb1. { i32[b1] | b1 = 0 }>[Option { 0 < a0 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.508071Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.508180Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:52:13: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.508282Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:52:13: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.508392Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.508516Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.508633Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.508749Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.508865Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.508980Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.509084Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.509190Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.509296Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_10 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.509419Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_10 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _10: (), _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.509526Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb3","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _10: (), _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.509628Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb3","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _10: (), _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.509742Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _10: (), _11: (), _12: Option::Some(i32[a3]), _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.509929Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | * }>[Option { true }], _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510040Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | * }>[Option { true }], _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510149Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, 0 < a0 ⇒ a1 = 0 + 1 ∧ a2 = a0, (0 < a0) = true, a3: int, a3 = 0, a4: bool, a5: int, *}","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | * }>[Option { true }], _14: ptr(mut, _9), _17: i32[a3], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510267Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb3","env":"{_1: i32[a0], _4: i32[a5], _9: Range<λb0. i32[b0]>[Range { a1, a2 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | * }>[Option { true }], _14: ptr(mut, _9), _17: i32[a3], _18: ()}","bb_env":"[bindings = a0: int, reftgenerics = ] {_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510407Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb3","bb_env":"Some([bindings = a0: int, reftgenerics = ] {_1: i32[a0], _4: ∃b0. { i32[b0] | * }, _9: ∃b1, b2. { Range<λb3. i32[b3]>[Range { b1, b2 }] | * }})"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510527Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb3","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510582Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseUnwind -> [real: bb4, cleanup: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510643Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseUnwind -> [real: bb4, cleanup: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510700Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb4","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510753Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510808Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510863Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510918Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.510973Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.511027Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.511088Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.511156Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.511220Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_14 = &'?2 mut _9","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.511332Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_14 = &'?2 mut _9","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.511408Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unfold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.511478Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unfold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.511535Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_13 = &'?3 mut *_14","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.511615Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_13 = &'?3 mut *_14","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _13: ptr(mut, _9), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.511676Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_12 = call call iter::range::{impl#6}::next<i32>(move _13) -> [return: bb5, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _13: ptr(mut, _9), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.512384Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_12 = call call iter::range::{impl#6}::next<i32>(move _13) -> [return: bb5, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.512514Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb5","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.512620Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_9)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.512721Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_9)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.512819Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(*_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.512920Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(*_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.513020Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.513120Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.513220Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.513319Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.513425Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_15 = discriminant(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.513545Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_15 = discriminant(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9), _15: discr(Option, _12)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.513652Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _15) -> [0: bb7, 1: bb8, otherwise: bb6]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9), _15: discr(Option, _12)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.513784Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _15) -> [0: bb7, 1: bb8, otherwise: bb6]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.513949Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb7","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.514065Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseEdge -> [real: bb9, imaginary: bb8]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.514175Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseEdge -> [real: bb9, imaginary: bb8]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.514280Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb9","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.514376Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_5 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.514490Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_5 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.514593Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.514690Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.514787Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.514884Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.514979Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.515080Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.515181Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.515278Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.515374Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.515472Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.515571Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.515675Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.515776Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.515872Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.515970Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.516067Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.516162Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_24 = copy _4","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.516277Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_24 = copy _4","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.516381Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.516478Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.516582Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_25 = copy _1","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.516694Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_25 = copy _1","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1], _25: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.516801Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_23 = Le(move _24, move _25)","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1], _25: i32[a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.516931Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_23 = Le(move _24, move _25)","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.517036Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.517137Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.517238Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.517345Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.517451Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_0 = call call assert(move _23) -> [return: bb15, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.517661Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_0 = call call assert(move _23) -> [return: bb15, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.517764Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb15","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.517864Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:26: 54:27 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.517962Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:26: 54:27 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.518060Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:55:5: 55:6 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.518160Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:55:5: 55:6 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.518258Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb17","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.518354Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb17","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.518454Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.518613Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | * }>[Option { false }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.518718Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | * }>[Option { false }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.518825Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | * }>[Option { false }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.519050Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb8","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.519169Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.519285Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.519401Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_17 = copy (_12 as Some).0","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.519527Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_17 = copy (_12 as Some).0","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.519638Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:13: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.519742Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:13: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.519846Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.519953Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.520057Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.520160Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.520264Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_20 = copy _4","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.520380Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_20 = copy _4","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.520487Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.520593Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.520703Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_21 = copy _17","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.520819Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_21 = copy _17","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1], _21: i32[a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.520941Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_19 = Le(move _20, move _21)","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1], _21: i32[a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.521067Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_19 = Le(move _20, move _21)","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.521184Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.521295Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.521403Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.521517Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.521625Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_18 = call call assert(move _19) -> [return: bb10, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.521835Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_18 = call call assert(move _19) -> [return: bb10, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.521951Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb10","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.522053Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:28: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.522158Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:28: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.522269Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:29: 49:30 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.522382Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:29: 49:30 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.522487Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:50:16: 50:22 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.522590Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:50:16: 50:22 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.522696Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_22 = call call cond() -> [return: bb11, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.522899Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_22 = call call cond() -> [return: bb11, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: (), _22: bool[a7]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.523016Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb11","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: (), _22: bool[a7]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.523121Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _22) -> [0: bb13, otherwise: bb12]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: (), _22: bool[a7]}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.523241Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _22) -> [0: bb13, otherwise: bb12]","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.523354Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb13","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, ¬a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.523459Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:52:14: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, ¬a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.523581Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:52:14: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, ¬a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.523690Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, ¬a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.523796Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, ¬a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.523905Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb14","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}","bb_env":"empty"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.523977Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb14","bb_env":"Some([bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] {_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()})"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.524041Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb12","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.524146Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_4 = Add(copy _4, 1i32)","stmt_span":"tests/test_vsflux00.rs:51:17: 51:25 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.524274Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_4 = Add(copy _4, 1i32)","stmt_span":"tests/test_vsflux00.rs:51:17: 51:25 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.524393Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:50:23: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.524544Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:50:23: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.524669Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.524790Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.524913Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb14","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}","bb_env":"[bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] {_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.525068Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb14","bb_env":"Some([bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] {_1: i32[a0], _4: ∃b0. { i32[b0] | * }, _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()})"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.525137Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb6","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.525238Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForMatchedPlace(None), _12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.525338Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForMatchedPlace(None), _12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.525438Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"unreachable","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.525534Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"unreachable","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.525666Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.525773Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:52:13: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.525881Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:52:13: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.525989Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.526097Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.526212Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.526323Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.526437Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.526544Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.526651Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.526758Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.526865Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_10 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.526989Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_10 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.527101Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb3","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.527208Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb3","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.527316Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.527505Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | * }>[Option { true }], _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.527618Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | * }>[Option { true }], _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.527737Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, *, a2: int, a3: int, *, a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, *}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | * }>[Option { true }], _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.527865Z","level":"DEBUG","fields":{"event":"shape_goto_enter","target":"bb3","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | * }>[Option { true }], _14: ptr(mut, _9), _17: i32[a6], _18: ()}","bb_env":"[bindings = a0: int, reftgenerics = ] {_1: i32[a0], _4: ∃b0. { i32[b0] | * }, _9: ∃b1, b2. { Range<λb3. i32[b3]>[Range { b1, b2 }] | * }}"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.528030Z","level":"DEBUG","fields":{"event":"shape_goto_exit","target":"bb3","bb_env":"Some([bindings = a0: int, reftgenerics = ] {_1: i32[a0], _4: ∃b0. { i32[b0] | * }, _9: ∃b1, b2. { Range<λb3. i32[b3]>[Range { b1, b2 }] | * }})"},"target":"flux_refineck::checker","span":{"def_id":"test","name":"shape"},"spans":[{"def_id":"test","name":"shape"}]}
{"timestamp":"2024-11-24T19:08:38.528381Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb0","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.528433Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:8: 46:16 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.528484Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:8: 46:16 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.528539Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:8: 46:11 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.528589Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:8: 46:11 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.528639Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:46:8: 46:11 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.528702Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_3 = copy _1","stmt_span":"tests/test_vsflux00.rs:46:8: 46:11 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0], _3: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.528755Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_2 = Ge(move _3, 0i32)","stmt_span":"tests/test_vsflux00.rs:46:8: 46:16 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0], _3: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.528824Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_2 = Ge(move _3, 0i32)","stmt_span":"tests/test_vsflux00.rs:46:8: 46:16 (#0)","rcx":"{a0: int}","env":"{_1: i32[a0], _2: bool[a0 ≥ 0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.528884Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _2) -> [0: bb16, otherwise: bb1]","rcx":"{a0: int}","env":"{_1: i32[a0], _2: bool[a0 ≥ 0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.528945Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _2) -> [0: bb16, otherwise: bb1]","rcx":"{a0: int}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.528999Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb16","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529055Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:15: 46:16 (#0)","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529111Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:15: 46:16 (#0)","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529167Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:55:6: 55:6 (#0)","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529246Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_0 = ()","stmt_span":"tests/test_vsflux00.rs:55:6: 55:6 (#0)","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_0: (), _1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529310Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb17","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_0: (), _1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529366Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb17","rcx":"{a0: int, ¬(a0 ≥ 0)}","env":"{_0: (), _1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529451Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb1","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529504Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:15: 46:16 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529559Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:46:15: 46:16 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529616Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:47:13: 47:20 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529671Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:47:13: 47:20 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529736Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_4 = 0i32","stmt_span":"tests/test_vsflux00.rs:47:23: 47:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529819Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_4 = 0i32","stmt_span":"tests/test_vsflux00.rs:47:23: 47:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529887Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:47:13: 47:20 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.529946Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForLet(None), _4)","stmt_span":"tests/test_vsflux00.rs:47:13: 47:20 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.530020Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.530081Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.530151Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.530225Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.530286Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.530344Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.530404Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:21: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.530465Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:21: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.530522Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_8 = copy _1","stmt_span":"tests/test_vsflux00.rs:48:21: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.530598Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_8 = copy _1","stmt_span":"tests/test_vsflux00.rs:48:21: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _8: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.530658Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_7 = ops::range::Range::Range<i32>(0i32, move _8)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _8: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.531018Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_7 = ops::range::Range::Range<i32>(0i32, move _8)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _7: Range<λb0. { i32[b0] | $k2(b0)[a0] }>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.531098Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _7: Range<λb0. { i32[b0] | $k2(b0)[a0] }>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.531170Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#0)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _7: Range<λb0. { i32[b0] | $k2(b0)[a0] }>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.531244Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_6 = call call iter::traits::collect::{impl#1}::into_iter<ops::range::Range<i32>>(move _7) -> [return: bb2, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _7: Range<λb0. { i32[b0] | $k2(b0)[a0] }>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.531580Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_6 = call call iter::traits::collect::{impl#1}::into_iter<ops::range::Range<i32>>(move _7) -> [return: bb2, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.531658Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb2","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.531727Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.531795Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.531861Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_6)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.531930Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_6)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.531998Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.532064Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.532140Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_9 = move _6","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _6: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.532255Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_9 = move _6","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.532327Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb3","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.532398Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb3","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.532468Z","level":"DEBUG","fields":{"event":"refine_goto","target":"bb3","rcx":"{a0: int, a0 ≥ 0}","env":"{_1: i32[a0], _4: i32[0], _9: Range<λb0. i32[b0]>[Range { 0, a0 }]}","bb_env":"[bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.532768Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb3","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.532854Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseUnwind -> [real: bb4, cleanup: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.532934Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseUnwind -> [real: bb4, cleanup: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533023Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb4","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533102Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533182Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533268Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533347Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533427Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533509Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533589Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533672Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533752Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_14 = &'?2 mut _9","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533858Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_14 = &'?2 mut _9","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.533946Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unfold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.534028Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unfold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.534109Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_13 = &'?3 mut *_14","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.534218Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_13 = &'?3 mut *_14","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _13: ptr(mut, _9), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.534306Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_12 = call call iter::range::{impl#6}::next<i32>(move _13) -> [return: bb5, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0]}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a2, a3 }], _13: ptr(mut, _9), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.535031Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_12 = call call iter::range::{impl#6}::next<i32>(move _13) -> [return: bb5, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.535184Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb5","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.535321Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(_9)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.535463Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(_9)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.535593Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"unblock(*_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.535722Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"unblock(*_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.535849Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.535974Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:23: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.536104Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"PlaceMention(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.536230Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"PlaceMention(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.536355Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_15 = discriminant(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.536504Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_15 = discriminant(_12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9), _15: discr(Option, _12)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.536639Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _15) -> [0: bb7, 1: bb8, otherwise: bb6]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9), _15: discr(Option, _12)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.536783Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _15) -> [0: bb7, 1: bb8, otherwise: bb6]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.536979Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb7","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.537102Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"falseEdge -> [real: bb9, imaginary: bb8]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.537232Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"falseEdge -> [real: bb9, imaginary: bb8]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.537355Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb9","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.537478Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_5 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.537618Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_5 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.537742Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.537867Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.537993Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.538122Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.538243Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.538364Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.538495Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.538620Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.538743Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.538868Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.538997Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.539125Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.539247Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.539373Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.539507Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.539632Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.539762Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_24 = copy _4","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.539899Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_24 = copy _4","stmt_span":"tests/test_vsflux00.rs:54:16: 54:19 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.540030Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.540159Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.540288Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_25 = copy _1","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.540446Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_25 = copy _1","stmt_span":"tests/test_vsflux00.rs:54:23: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1], _25: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.540590Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_23 = Le(move _24, move _25)","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _24: i32[a1], _25: i32[a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.540757Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_23 = Le(move _24, move _25)","stmt_span":"tests/test_vsflux00.rs:54:16: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.540900Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.541028Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.541156Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.541291Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:25: 54:26 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.541420Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_0 = call call assert(move _23) -> [return: bb15, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9), _23: bool[a1 ≤ a0]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.541661Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_0 = call call assert(move _23) -> [return: bb15, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.541793Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb15","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.541919Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:26: 54:27 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.542042Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:54:26: 54:27 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.542164Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:55:5: 55:6 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.542290Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:55:5: 55:6 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.542419Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb17","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.542546Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb17","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.542669Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::None, _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.542882Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | $k3(b1)[a0, a1, a2, a3, a4, a5] }>[Option { false }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.543027Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | $k3(b1)[a0, a1, a2, a3, a4, a5] }>[Option { false }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.543167Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = false}","env":"{_0: (), _1: i32[a0], _4: i32[a1], _5: (), _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | $k3(b1)[a0, a1, a2, a3, a4, a5] }>[Option { false }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.543422Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb8","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.543555Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.543685Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.543817Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_17 = copy (_12 as Some).0","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.543957Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_17 = copy (_12 as Some).0","stmt_span":"tests/test_vsflux00.rs:48:13: 48:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.544097Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:13: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.544231Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:13: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.544360Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.544524Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.544675Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.544816Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.544945Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_20 = copy _4","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.545087Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_20 = copy _4","stmt_span":"tests/test_vsflux00.rs:49:20: 49:23 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.545234Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.545364Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.545497Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_21 = copy _17","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.545640Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_21 = copy _17","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1], _21: i32[a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.545803Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_19 = Le(move _20, move _21)","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _20: i32[a1], _21: i32[a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.545981Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_19 = Le(move _20, move _21)","stmt_span":"tests/test_vsflux00.rs:49:20: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.546130Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.546290Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.546444Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.546581Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:27: 49:28 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.546728Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_18 = call call assert(move _19) -> [return: bb10, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _19: bool[a1 ≤ a6]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.547004Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_18 = call call assert(move _19) -> [return: bb10, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.547151Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb10","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.547288Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:28: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.547424Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:28: 49:29 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.547564Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:29: 49:30 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.547700Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:49:29: 49:30 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.547838Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:50:16: 50:22 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.547978Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:50:16: 50:22 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.548112Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"_22 = call call cond() -> [return: bb11, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.548356Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"_22 = call call cond() -> [return: bb11, unwind: Cleanup(bb18)]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: (), _22: bool[a7]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.548500Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb11","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: (), _22: bool[a7]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.548644Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"switchInt(move _22) -> [0: bb13, otherwise: bb12]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: (), _22: bool[a7]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.548788Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"switchInt(move _22) -> [0: bb13, otherwise: bb12]","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.548930Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb13","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, ¬a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.549075Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:52:14: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, ¬a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.549229Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:52:14: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, ¬a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.549373Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, ¬a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.549515Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, ¬a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.549662Z","level":"DEBUG","fields":{"event":"refine_goto","target":"bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, ¬a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}","bb_env":"[bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.550010Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb12","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.550153Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_4 = Add(copy _4, 1i32)","stmt_span":"tests/test_vsflux00.rs:51:17: 51:25 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.550320Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_4 = Add(copy _4, 1i32)","stmt_span":"tests/test_vsflux00.rs:51:17: 51:25 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.550463Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:50:23: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.550624Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_11 = ()","stmt_span":"tests/test_vsflux00.rs:50:23: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.550770Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.550910Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.551068Z","level":"DEBUG","fields":{"event":"refine_goto","target":"bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a7}","env":"{_1: i32[a0], _4: i32[a1 + 1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}","bb_env":"[bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.551502Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb6","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.551640Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"FakeRead(ForMatchedPlace(None), _12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.551773Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"FakeRead(ForMatchedPlace(None), _12)","stmt_span":"tests/test_vsflux00.rs:48:18: 48:24 (#74)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.551906Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"unreachable","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.552039Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"unreachable","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3}","env":"{_1: i32[a0], _4: i32[a1], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _12: Option<λb1. { i32[b1] | b1 = a2 }>[Option { a2 < a3 }], _14: ptr(mut, _9)}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.552239Z","level":"DEBUG","fields":{"event":"basic_block_start","bb":"bb14","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.552395Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:52:13: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.552547Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:52:13: 52:14 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.552697Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.552852Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#0)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.553003Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.553157Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.553308Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.553462Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.553612Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.553774Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"nop","stmt_span":"tests/test_vsflux00.rs:53:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.553935Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"_10 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.554112Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"_10 = ()","stmt_span":"tests/test_vsflux00.rs:48:9: 53:10 (#73)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.554282Z","level":"DEBUG","fields":{"event":"terminator_start","terminator":"goto -> bb3","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.554433Z","level":"DEBUG","fields":{"event":"terminator_end","terminator":"goto -> bb3","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.554593Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.554932Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_12)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | $k4(b1)[a0, a1, a2, a3, a4, a5, a6, a7, a8] }>[Option { true }], _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.555112Z","level":"DEBUG","fields":{"event":"statement_start","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | $k4(b1)[a0, a1, a2, a3, a4, a5, a6, a7, a8] }>[Option { true }], _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.555286Z","level":"DEBUG","fields":{"event":"statement_end","stmt":"fold(_14)","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | $k4(b1)[a0, a1, a2, a3, a4, a5, a6, a7, a8] }>[Option { true }], _14: ptr(mut, _9), _17: i32[a6], _18: ()}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
{"timestamp":"2024-11-24T19:08:38.555461Z","level":"DEBUG","fields":{"event":"refine_goto","target":"bb3","rcx":"{a0: int, a0 ≥ 0, a1: int, a2: int, a3: int, $k1(a1, a2, a3)[a0], a4: int, a5: int, a2 < a3 ⇒ a4 = a2 + 1 ∧ a5 = a3, (a2 < a3) = true, a6: int, a6 = a2, a7: bool, a8: int, $k0(a8)[a0, a1, a2, a3, a4, a5, a6, a7]}","env":"{_1: i32[a0], _4: i32[a8], _9: Range<λb0. i32[b0]>[Range { a4, a5 }], _10: (), _11: (), _12: Option<λb1. { i32[b1] | $k4(b1)[a0, a1, a2, a3, a4, a5, a6, a7, a8] }>[Option { true }], _14: ptr(mut, _9), _17: i32[a6], _18: ()}","bb_env":"[bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}"},"target":"flux_refineck::checker","span":{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"},"spans":[{"bb_envs":"{DefId(0:19 ~ test_vsflux00[c8ab]::test): {bb14: [bindings = a0: int, a1: int, a2: int, a3: int, a4: int, a5: int, a6: int, a7: bool, reftgenerics = ] for<?b0> $k0(b0)[a0, a1, a2, a3, a4, a5, a6, a7] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb1. i32[b1]>[Range { a4, a5 }], _11: (), _12: Option::Some(i32[a6]), _14: ptr(mut, _9), _17: i32[a6], _18: ()}, bb3: [bindings = a0: int, reftgenerics = ] for<?b0, ?b1, ?b2> $k1(b0, b1, b2)[a0] ⇒ {_1: i32[a0], _4: i32[b0], _9: Range<λb3. i32[b3]>[Range { b1, b2 }]}}}","def_id":"test","name":"refine"}]}
